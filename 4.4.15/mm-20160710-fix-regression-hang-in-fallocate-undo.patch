From: Hugh Dickins <hughd@google.com>
Subject: [PATCH] tmpfs: fix regression hang in fallocate undo
Date: Sun, 10 Jul 2016 16:46:32 -0700 (PDT)
Cc: Anthony Romano <anthony.romano@coreos.com>, 
    Brandon Philips <brandon@ifup.co>, 
    Andrew Morton <akpm@linux-foundation.org>, 
    Vlastimil Babka <vbabka@suse.cz>, linux-kernel@vger.kernel.org, 
    linux-mm@kvack.org
To: Linus Torvalds <torvalds@linux-foundation.org>
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel.mm/154689>

The well-spotted fallocate undo fix is good in most cases, but not when
fallocate failed on the very first page.  index 0 then passes lend -1
to shmem_undo_range(), and that has two bad effects: (a) that it will
undo every fallocation throughout the file, unrestricted by the current
range; but more importantly (b) it can cause the undo to hang, because
lend -1 is treated as truncation, which makes it keep on retrying until
every page has gone, but those already fully instantiated will never go
away.  Big thank you to xfstests generic/269 which demonstrates this.

[HH: backported to 4.4.x]
Fixes: b9b4bb26af01 ("tmpfs: don't undo fallocate past its last page")
Cc: stable@vger.kernel.org
Signed-off-by: Hugh Dickins <hughd@google.com>
---

 mm/shmem.c |    8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

--- 4.7-rc6/mm/shmem.c	2016-06-26 22:02:27.543373427 -0700
+++ linux/mm/shmem.c	2016-07-10 15:19:24.000000000 -0700
@@ -2153,9 +2153,11 @@ static long shmem_fallocate(struct file
 									NULL);
 		if (error) {
 			/* Remove the !PageUptodate pages we added */
-			shmem_undo_range(inode,
-				(loff_t)start << PAGE_CACHE_SHIFT,
-				((loff_t)index << PAGE_CACHE_SHIFT) - 1, true);
+			if (index > start) {
+				shmem_undo_range(inode,
+				    (loff_t)start << PAGE_CACHE_SHIFT,
+				    ((loff_t)index << PAGE_CACHE_SHIFT) - 1, true);
+			}
 			goto undone;
 		}
 
