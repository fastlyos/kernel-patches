From:	Luis de Bethencourt <luisbg@osg.samsung.com>
To:	linux-btrfs@vger.kernel.org
Cc:	linux-kernel@vger.kernel.org, clm@fb.com, jbacik@fb.com,
	dsterba@suse.com, Luis de Bethencourt <luisbg@osg.samsung.com>
Subject: [PATCH v4] btrfs: fix typo in btrfs_statfs()
Date:	Mon,  4 Apr 2016 15:31:22 +0100

Correct a typo in the chunk_mutex name to make it grepable.

Since it is better to fix several typos at once, fixing the 2 more in the
same file.

Signed-off-by: Luis de Bethencourt <luisbg@osg.samsung.com>
---

Hi,

Sorry for sending again. Previous version had a line over 80 characters.

Explanation from previous patch:
David recommended I look around the rest of the file for other typos to fix.

These two more are all I see in the rest of the file without nitpicking.

Thanks and apologies for sending v3 without thoroughly checking,
Luis


 fs/btrfs/super.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/fs/btrfs/super.c b/fs/btrfs/super.c
index 7e766ffc..bc060cf 100644
--- a/fs/btrfs/super.c
+++ b/fs/btrfs/super.c
@@ -1484,10 +1484,10 @@ static int setup_security_options(struct btrfs_fs_info *fs_info,
 		memcpy(&fs_info->security_opts, sec_opts, sizeof(*sec_opts));
 	} else {
 		/*
-		 * Since SELinux(the only one supports security_mnt_opts) does
-		 * NOT support changing context during remount/mount same sb,
-		 * This must be the same or part of the same security options,
-		 * just free it.
+		 * Since SELinux (the only one supporting security_mnt_opts)
+		 * does NOT support changing context during remount/mount of
+		 * the same sb, this must be the same or part of the same
+		 * security options, just free it.
 		 */
 		security_free_mnt_opts(sec_opts);
 	}
@@ -1665,8 +1665,8 @@ static inline void btrfs_remount_cleanup(struct btrfs_fs_info *fs_info,
 					 unsigned long old_opts)
 {
 	/*
-	 * We need cleanup all defragable inodes if the autodefragment is
-	 * close or the fs is R/O.
+	 * We need to cleanup all defragable inodes if the autodefragment is
+	 * close or the filesystem is read only.
 	 */
 	if (btrfs_raw_test_opt(old_opts, AUTO_DEFRAG) &&
 	    (!btrfs_raw_test_opt(fs_info->mount_opt, AUTO_DEFRAG) ||
@@ -2050,7 +2050,7 @@ static int btrfs_statfs(struct dentry *dentry, struct kstatfs *buf)
 	int mixed = 0;
 
 	/*
-	 * holding chunk_muext to avoid allocating new chunks, holding
+	 * holding chunk_mutex to avoid allocating new chunks, holding
 	 * device_list_mutex to avoid the device being removed
 	 */
 	rcu_read_lock();
-- 
2.6.4
