From 66318479eb4635afebe18b526c639a04c6e10635 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Wed, 10 Jun 2015 21:39:40 +0800
Subject: [PATCH 21/22] bfs: Remove unused scheduler api.

---
 include/linux/sched.h |  7 -------
 kernel/sched/bfs.c    | 19 -------------------
 2 files changed, 26 deletions(-)

diff --git a/include/linux/sched.h b/include/linux/sched.h
index 644f80d..8b05d33 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1750,8 +1750,6 @@ struct task_struct {
 };
 
 #ifdef CONFIG_SCHED_BFS
-bool grunqueue_is_locked(void);
-void grq_unlock_wait(void);
 void cpu_scaling(int cpu);
 void cpu_nonscaling(int cpu);
 #define tsk_seruntime(t)		((t)->sched_time)
@@ -1761,11 +1759,6 @@ static inline void tsk_cpus_current(struct task_struct *p)
 {
 }
 
-static inline int runqueue_is_locked(int cpu)
-{
-	return grunqueue_is_locked();
-}
-
 void print_scheduler_version(void);
 
 static inline bool iso_task(struct task_struct *p)
diff --git a/kernel/sched/bfs.c b/kernel/sched/bfs.c
index ea483cc..69cae89 100644
--- a/kernel/sched/bfs.c
+++ b/kernel/sched/bfs.c
@@ -450,25 +450,6 @@ static inline void task_grq_unlock(unsigned long *flags)
 	grq_unlock_irqrestore(flags);
 }
 
-/**
- * grunqueue_is_locked
- *
- * Returns true if the global runqueue is locked.
- * This interface allows printk to be called with the runqueue lock
- * held and know whether or not it is OK to wake up the klogd.
- */
-bool grunqueue_is_locked(void)
-{
-	return raw_spin_is_locked(&grq.lock);
-}
-
-void grq_unlock_wait(void)
-	__releases(grq.lock)
-{
-	smp_mb(); /* spin-unlock-wait is not a full memory barrier */
-	raw_spin_unlock_wait(&grq.lock);
-}
-
 static inline void time_grq_lock(struct rq *rq, unsigned long *flags)
 	__acquires(grq.lock)
 {
-- 
2.4.6

