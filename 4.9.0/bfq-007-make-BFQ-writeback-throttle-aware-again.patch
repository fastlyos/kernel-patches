From d4b2b2cb05d579871f5413af913d7b136b328274 Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Wed, 14 Dec 2016 07:19:04 +0100
Subject: [PATCH] bfq-wb-4.9: make BFQ writeback-throttle aware again

---
 block/bfq-cgroup.c  | 12 ++++++++++++
 block/bfq-iosched.c |  1 +
 2 files changed, 13 insertions(+)

diff --git a/block/bfq-cgroup.c b/block/bfq-cgroup.c
index a04bc40..6fb0ef1 100644
--- a/block/bfq-cgroup.c
+++ b/block/bfq-cgroup.c
@@ -649,6 +649,18 @@ static void bfq_bic_update_cgroup(struct bfq_io_cq *bic, struct bio *bio)
 	if (unlikely(!bfqd) || likely(bic->blkcg_serial_nr == serial_nr))
 		goto out;
 
+	/*
+	* If we have a non-root cgroup, we can depend on that to
+	* do proper throttling of writes. Turn off wbt for that
+	* case.
+	*/
+	if (bio_blkcg(bio) != &blkcg_root) {
+		struct request_queue *q = bfqd->queue;
+
+		if (q->rq_wb)
+			wbt_disable(q->rq_wb);
+	}
+
 	bfqg = __bfq_bic_change_cgroup(bfqd, bic, bio_blkcg(bio));
 	bic->blkcg_serial_nr = serial_nr;
 out:
diff --git a/block/bfq-iosched.c b/block/bfq-iosched.c
index 2d00bd10..736e28e 100644
--- a/block/bfq-iosched.c
+++ b/block/bfq-iosched.c
@@ -78,6 +78,7 @@
 #include <linux/ioprio.h>
 #include "bfq.h"
 #include "blk.h"
+#include "blk-wbt.h"
 
 /* Expiration time of sync (0) and async (1) requests, in ns. */
 static const u64 bfq_fifo_expire[2] = { NSEC_PER_SEC / 4, NSEC_PER_SEC / 8 };
