From f37bfc16692be0b274e2f6d1f393f51450a84d31 Mon Sep 17 00:00:00 2001
From: Alfred Chen <cchalpha@gmail.com>
Date: Mon, 17 Dec 2018 13:52:42 +0800
Subject: [PATCH] pds: Quick abort in take_queued_task_cpumask().

---
 kernel/sched/pds.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/kernel/sched/pds.c b/kernel/sched/pds.c
index b1ba09917ff7..6cf05e101c69 100644
--- a/kernel/sched/pds.c
+++ b/kernel/sched/pds.c
@@ -3217,11 +3217,10 @@ take_queued_task_cpumask(struct rq *rq, cpumask_t *chk_mask, int filter_prio)
 		int nr_migrated;
 		struct rq *src_rq = cpu_rq(src_cpu);
 
-		if (unlikely(!do_raw_spin_trylock(&src_rq->lock))) {
+		if (!do_raw_spin_trylock(&src_rq->lock)) {
 			if (PRIO_LIMIT == filter_prio)
 				continue;
-			else
-				return 0;
+			return 0;
 		}
 		spin_acquire(&src_rq->lock.dep_map, SINGLE_DEPTH_NESTING, 1, _RET_IP_);
 
@@ -3231,7 +3230,7 @@ take_queued_task_cpumask(struct rq *rq, cpumask_t *chk_mask, int filter_prio)
 		spin_release(&src_rq->lock.dep_map, 1, _RET_IP_);
 		do_raw_spin_unlock(&src_rq->lock);
 
-		if (nr_migrated)
+		if (nr_migrated || PRIO_LIMIT != filter_prio)
 			return nr_migrated;
 	}
 	return 0;
-- 
2.18.1

