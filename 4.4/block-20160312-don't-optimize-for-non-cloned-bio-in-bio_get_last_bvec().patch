From: Ming Lei <ming.lei@canonical.com>
Subject: [PATCH] block: don't optimize for non-cloned bio in bio_get_last_bvec()
Date: Sat, 12 Mar 2016 22:56:19 +0800
Cc: linux-block@vger.kernel.org, Christoph Hellwig <hch@infradead.org>,
	Sagi Grimberg <sagig@dev.mellanox.co.il>, Kent Overstreet
	<kent.overstreet@gmail.com>, Ming Lei <ming.lei@canonical.com>,
	stable@vger.kernel.org
To: Jens Axboe <axboe@kernel.dk>, linux-kernel@vger.kernel.org
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel.stable/170204>

For !BIO_CLONED bio, we can use .bi_vcnt safely, but it
doesn't mean we can just simply return .bi_io_vec[.bi_vcnt - 1]
because the start postion may have been moved in the middle of
the bvec, such as splitting in the middle of bvec.

Fixes: 7bcd79ac50d9(block: bio: introduce helpers to get the 1st and last bvec)
Cc: stable@vger.kernel.org
Reported-by: Kent Overstreet <kent.overstreet@gmail.com>
Signed-off-by: Ming Lei <ming.lei@canonical.com>
---
Jens, I am fine with either reverting previous patchset or
applying this one to v4.5, and you decide it.

Thanks Kent for reporting the issue!

 include/linux/bio.h | 5 -----
 1 file changed, 5 deletions(-)

diff --git a/include/linux/bio.h b/include/linux/bio.h
index 1e7248f..4abc129 100644
--- a/include/linux/bio.h
+++ b/include/linux/bio.h
@@ -267,11 +267,6 @@ static inline void bio_get_last_bvec(struct bio *bio, struct bio_vec *bv)
 	struct bvec_iter iter = bio->bi_iter;
 	int idx;
 
-	if (!bio_flagged(bio, BIO_CLONED)) {
-		*bv = bio->bi_io_vec[bio->bi_vcnt - 1];
-		return;
-	}
-
 	if (unlikely(!bio_multiple_segments(bio))) {
 		*bv = bio_iovec(bio);
 		return;
