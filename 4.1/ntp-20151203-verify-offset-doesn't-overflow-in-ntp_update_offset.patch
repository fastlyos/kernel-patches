From: Sasha Levin <sasha.levin@oracle.com>
Newsgroups: gmane.linux.kernel
Subject: [PATCH] ntp: verify offset doesn't overflow in ntp_update_offset
Date: Thu,  3 Dec 2015 15:46:48 -0500
Archived-At: <http://permalink.gmane.org/gmane.linux.kernel/2099782>

We need to make sure that the offset is valid before manipulating it,
otherwise it might overflow on the multiplication.

Signed-off-by: Sasha Levin <sasha.levin@oracle.com>
---
 kernel/time/ntp.c |    6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/kernel/time/ntp.c b/kernel/time/ntp.c
index 149cc80..36616c3 100644
--- a/kernel/time/ntp.c
+++ b/kernel/time/ntp.c
@@ -297,6 +297,9 @@ static void ntp_update_offset(long offset)
 	if (!(time_status & STA_PLL))
 		return;
 
+	/* Make sure the multiplication below won't overflow */
+	offset = clamp(offset, -MAXPHASE, MAXPHASE);
+
 	if (!(time_status & STA_NANO))
 		offset *= NSEC_PER_USEC;
 
@@ -304,8 +307,7 @@ static void ntp_update_offset(long offset)
 	 * Scale the phase adjustment and
 	 * clamp to the operating range.
 	 */
-	offset = min(offset, MAXPHASE);
-	offset = max(offset, -MAXPHASE);
+	offset = clamp(offset, -MAXPHASE, MAXPHASE);
 
 	/*
 	 * Select how the frequency is to be controlled
-- 
1.7.10.4
