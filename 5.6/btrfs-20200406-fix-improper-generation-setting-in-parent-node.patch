From:   Josef Bacik <josef@toxicpanda.com>
To:     linux-btrfs@vger.kernel.org, kernel-team@fb.com
Subject: [PATCH] btrfs: fix improper generation setting in parent node
Date:   Mon,  6 Apr 2020 10:59:05 -0400

With the delayed ref throttling patches I started getting a lot of
"parent transid mismatch" messages when running my snapshot+balance
torture test.  This turned out to be because we will unconditionally set
the generation of a relocated tree block to the current transaction.

This is generally true, but especially for mid-tree nodes we could have
cow'ed the block in a previous transaction, and only actually update
it's parents in a completely different transaction.  Thus we end up with
a parent transid that is in the future of the actual block.  Fix this by
using the generation for the extent buffer we're pointing to.

Fixes: 5d4f98a28c7d ("Btrfs: Mixed back reference  (FORWARD ROLLING FORMAT CHANGE)")
Signed-off-by: Josef Bacik <josef@toxicpanda.com>
---
 fs/btrfs/relocation.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/fs/btrfs/relocation.c b/fs/btrfs/relocation.c
index 3ca98d7e4896..d4734337127a 100644
--- a/fs/btrfs/relocation.c
+++ b/fs/btrfs/relocation.c
@@ -2303,7 +2303,7 @@ static int do_relocation(struct btrfs_trans_handle *trans,
 			btrfs_set_node_blockptr(upper->eb, slot,
 						node->eb->start);
 			btrfs_set_node_ptr_generation(upper->eb, slot,
-						      trans->transid);
+					btrfs_header_generation(eb));
 			btrfs_mark_buffer_dirty(upper->eb);
 
 			btrfs_init_generic_ref(&ref, BTRFS_ADD_DELAYED_REF,
